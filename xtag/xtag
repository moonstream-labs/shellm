#!/bin/zsh
# xtag
# Current Working Version

set -eo pipefail

SCRIPT_PATH="${0:A}"
SCRIPT_DIR="${SCRIPT_PATH:h}"

# Source the other script files
source "$SCRIPT_DIR/core.sh"
source "$SCRIPT_DIR/utils.sh"
source "$SCRIPT_DIR/output.sh"

# Main script logic
main() {
    local tag_type=""
    local num_items=1
    local save_path=""
    local multi_save_dir=""
    
    # Check for --help option before getopts
    for arg in "$@"; do
        if [[ "$arg" == "--help" ]]; then
            usage
            exit 0
        fi
    done
    
    # Parse options
    while getopts ":ixfvbd:e:c:r:s:m:th" opt; do
        case $opt in
            i) tag_type="instructions" ;;
            x) tag_type="context" ;;
            f) tag_type="repomap" ;;
            v) tag_type="version" ;;
            b) tag_type="codebase" ;;
            d) tag_type="document"; num_items=${OPTARG:-1} ;;
            e)
    			tag_type="example"
    			num_items=${OPTARG:-1}
    			if [[ ${@[$OPTIND]} != -* && -n ${@[$OPTIND]} ]]; then
    			    meta=${@[$OPTIND]}
    			    OPTIND=$((OPTIND+1))
    			else
    			    meta=""
    			fi
    			;;
            c) tag_type="code"; num_items=${OPTARG:-1} ;;
            r) tag_type="reasoning"; num_items=${OPTARG:-1} ;;
            s) save_path="$OPTARG" ;;
            m) multi_save_dir="$OPTARG" ;;
			p) # <dependencies> tag (to be implemented)
			   ;;
            t) # Custom tag (to be implemented)
               ;;
            h) usage; exit 0 ;;
            \?) error_exit "Invalid option: -$OPTARG" ;;
            :) error_exit "Option -$OPTARG requires an argument." ;;
        esac
    done

    shift $((OPTIND-1))

    # Check if a tag type was specified
    [[ -z "$tag_type" ]] && error_exit "No tag type specified"

    # If files are provided, process them
    if [[ $# -gt 0 ]]; then
        fill_tags "$tag_type" "$num_items" "$@"
        # Regenerate output with filled content
    fi

	# Generate output after filling tags
    local output=$(make_xtags "$tag_type" "$num_items")

    # Handle output
    handle_output "$output" "$save_path" "$multi_save_dir"
}

# Run the main function
main "$@"